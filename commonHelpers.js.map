{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\nlet pages = 1;\nconst paramsPix = {\n  key: '36975970-2726c7257b1c2078714098d3d',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: 'true',\n  per_page: '33',\n};\n\nexport function onGetPhotoByText(query) {\n  const API_KEY = '36975970-2726c7257b1c2078714098d3d';\n  const targetUrl = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=${paramsPix.image_type}&orientation=${paramsPix.orientation}&safesearch=${paramsPix.safesearch}&page=${pages}&per_page=${paramsPix.per_page}`;\n  return fetch(targetUrl).then(res => {\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    return res.json();\n  });\n}\nexport function onFetchError() {\n  iziToast.show({\n    backgroundColor: '#ef4040',\n    message:\n      'Sorry, there are no images matching </br> your search query. Please, try again!',\n    messageColor: '#fff',\n    messageSize: '16px',\n    position: 'topRight',\n  });\n}\n","// Описаний у документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nconst newGallery = document.querySelector('.main-list');\n\nlet userDataLog = new SimpleLightbox('.main-list a', {\n  captions: true,\n  captionType: 'attr',\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n\nexport function onCreateGalleryPhoto(data) {\n  newGallery.innerHTML = '';\n  console.log(data);\n  newGallery.insertAdjacentHTML('beforeend', onCreateData(data.hits));\n  userDataLog.refresh();\n}\nfunction onCreateData(data) {\n  return data\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<li class=\"gallery-item\">\n            <div class=\"list-clock\">\n              <a class=\"gallery-link\" href=${largeImageURL}>\n                <img\n                  class=\"gallery-image\"\n                  src=${webformatURL}\n                  alt=${tags}\n\n                />\n              </a>\n              <ul class=\"adds-list\">\n                <li class=\"info-item\">\n                  <p class=\"text-item text-item-name\">Likes</p>\n                  <p class=\"text-item\">${likes}</p>\n                </li>\n                <li class=\"info-item\">\n                  <p class=\"text-item text-item-name\">Views</p>\n                  <p class=\"text-item\">${views}</p>\n                </li>\n                <li class=\"info-item\">\n                  <p class=\"text-item text-item-name\">Comments</p>\n                  <p class=\"text-item\">${comments}</p>\n                </li>\n                <li class=\"info-item\">\n                  <p class=\"text-item text-item-name\">Downloads</p>\n                  <p class=\"text-item\">${downloads}</p>\n                </li>\n              </ul>\n            </div>\n          </li>`;\n      }\n    )\n    .join('');\n}\n","import { onFetchError, onGetPhotoByText } from './js/pixabay-api';\nimport { onCreateGalleryPhoto } from './js/render-functions';\nconst LoaderText = document.querySelector('.loader');\nconst InputQuery = document.querySelector('.input-query');\nconst btnSbm = document.querySelector('#btn-submit');\n\nbtnSbm.addEventListener('click', onCreateMarckup);\n\nfunction onCreateMarckup(evt) {\n  LoaderText.style.display = 'inline-block';\n  evt.preventDefault();\n\n  let queryData = InputQuery.value.replace(/\\s+/g, '+').toLowerCase();\n\n  onGetPhotoByText(queryData)\n    .then(data => {\n      LoaderText.style.display = 'none';\n      data.totalHits === 0 ? onFetchError(data) : onCreateGalleryPhoto(data);\n    })\n    .catch(onFetchError)\n    .finally(() => {\n      InputQuery.value = '';\n    });\n}\n"],"names":["pages","paramsPix","onGetPhotoByText","query","targetUrl","res","onFetchError","iziToast","newGallery","userDataLog","SimpleLightbox","onCreateGalleryPhoto","data","onCreateData","webformatURL","largeImageURL","tags","likes","views","comments","downloads","LoaderText","InputQuery","btnSbm","onCreateMarckup","evt","queryData"],"mappings":"6vBAIA,IAAIA,EAAQ,EACZ,MAAMC,EAAY,CAChB,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,IACZ,EAEO,SAASC,EAAiBC,EAAO,CAEtC,MAAMC,EAAY,qEAA6CD,CAAK,eAAeF,EAAU,UAAU,gBAAgBA,EAAU,WAAW,eAAeA,EAAU,UAAU,SAASD,CAAK,aAAaC,EAAU,QAAQ,GAC5N,OAAO,MAAMG,CAAS,EAAE,KAAKC,GAAO,CAClC,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACf,CAAG,CACH,CACO,SAASC,GAAe,CAC7BC,EAAS,KAAK,CACZ,gBAAiB,UACjB,QACE,kFACF,aAAc,OACd,YAAa,OACb,SAAU,UACd,CAAG,CACH,CC5BA,MAAMC,EAAa,SAAS,cAAc,YAAY,EAEtD,IAAIC,EAAc,IAAIC,EAAe,eAAgB,CACnD,SAAU,GACV,YAAa,OACb,aAAc,MACd,gBAAiB,SACjB,aAAc,GAChB,CAAC,EAEM,SAASC,EAAqBC,EAAM,CACzCJ,EAAW,UAAY,GACvB,QAAQ,IAAII,CAAI,EAChBJ,EAAW,mBAAmB,YAAaK,EAAaD,EAAK,IAAI,CAAC,EAClEH,EAAY,QAAO,CACrB,CACA,SAASI,EAAaD,EAAM,CAC1B,OAAOA,EACJ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,6CAE8BL,CAAa;AAAA;AAAA;AAAA,wBAGlCD,CAAY;AAAA,wBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAOaC,CAAK;AAAA;AAAA;AAAA;AAAA,yCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,yCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,yCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,gBAM7C,EACA,KAAK,EAAE,CACZ,CC/DA,MAAMC,EAAa,SAAS,cAAc,SAAS,EAC7CC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAS,SAAS,cAAc,aAAa,EAEnDA,EAAO,iBAAiB,QAASC,CAAe,EAEhD,SAASA,EAAgBC,EAAK,CAC5BJ,EAAW,MAAM,QAAU,eAC3BI,EAAI,eAAc,EAElB,IAAIC,EAAYJ,EAAW,MAAM,QAAQ,OAAQ,GAAG,EAAE,cAEtDpB,EAAiBwB,CAAS,EACvB,KAAKd,GAAQ,CACZS,EAAW,MAAM,QAAU,OAC3BT,EAAK,YAAc,EAAIN,EAAiB,EAAIK,EAAqBC,CAAI,CAC3E,CAAK,EACA,MAAMN,CAAY,EAClB,QAAQ,IAAM,CACbgB,EAAW,MAAQ,EACzB,CAAK,CACL"}